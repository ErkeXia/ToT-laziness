functools.partial(<function gpt at 0x0000019532B17BE0>, model='gpt-4.1-mini', temperature=0.7)
x = 4 8 8 8
-- new_ys --: ('8 * 8 = 64 (left: 4 8 64)  \n', '4 + 8 = 12 (left: 8 8 12)  \n', '8 / 4 = 2 (left: 2 8 8)  \n', '8 - 4 = 4 (left: 4 8 8)  \n', '8 / 8 = 1 (left: 4 1 8)\n', '8 - 8 = 0 (left: 4 0 8)  \n', '8 + 8 = 16 (left: 4 8 16)  \n', '4 * 8 = 32 (left: 8 8 32)  \n')
-- sol values --: (60, 20, 20, 20, 20, 0.001, 0, 0)
-- choices --: ['8 * 8 = 64 (left: 4 8 64)  \n', '4 + 8 = 12 (left: 8 8 12)  \n', '8 / 4 = 2 (left: 2 8 8)  \n', '8 - 4 = 4 (left: 4 8 8)  \n', '8 / 8 = 1 (left: 4 1 8)\n']

-- new_ys --: ('8 * 8 = 64 (left: 4 8 64)  \n64 / 4 = 16 (left: 8 16)\n', '8 / 4 = 2 (left: 2 8 8)  \n2 * 8 = 16 (left: 8 16)  \n', '8 - 4 = 4 (left: 4 8 8)  \n4 * 8 = 32 (left: 32 8)  \n', '8 / 8 = 1 (left: 4 1 8)\n4 - 1 = 3 (left: 3 8)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 8 = 8 (left: 4 8 8)  \n', '8 - 4 = 4 (left: 4 8 8)  \n8 - 4 = 4 (left: 4 8 4)  \n', '8 / 8 = 1 (left: 4 1 8)\n1 + 8 = 9 (left: 4 9)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 + 4 = 68 (left: 8 68)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 - 8 = 56 (left: 4 56)  \n', '4 + 8 = 12 (left: 8 8 12)  \n12 - 8 = 4 (left: 8 4)  \n', '4 + 8 = 12 (left: 8 8 12)  \n8 - 12 = -4 (left: 8 -4)  \n', '4 + 8 = 12 (left: 8 8 12)  \n8 / 8 = 1 (left: 1 12)  \n', '4 + 8 = 12 (left: 8 8 12)  \n8 * 12 = 96 (left: 8 96)\n', '8 / 4 = 2 (left: 2 8 8)  \n2 + 8 = 10 (left: 8 10)  \n', '8 / 4 = 2 (left: 2 8 8)  \n8 - 8 = 0 (left: 2 0)  \n', '8 / 4 = 2 (left: 2 8 8)  \n8 * 8 = 64 (left: 2 64)  \n', '8 / 4 = 2 (left: 2 8 8)  \n8 / 2 = 4 (left: 4 8)  \n', '8 / 4 = 2 (left: 2 8 8)  \n8 / 8 = 1 (left: 2 1)\n', '8 - 4 = 4 (left: 4 8 8)  \n4 + 8 = 12 (left: 12 8)  \n', '8 - 4 = 4 (left: 4 8 8)  \n8 + 8 = 16 (left: 4 16)  \n', '8 - 4 = 4 (left: 4 8 8)  \n8 * 8 = 64 (left: 4 64)  \n', '8 - 4 = 4 (left: 4 8 8)  \n4 - 8 = -4 (left: -4 8)  \n', '8 - 4 = 4 (left: 4 8 8)  \n8 / 8 = 1 (left: 4 1)\n', '8 / 8 = 1 (left: 4 1 8)\n8 + 4 = 12 (left: 12 1)  \n', '8 / 8 = 1 (left: 4 1 8)\n4 * 1 = 4 (left: 4 8)  \n', '8 / 8 = 1 (left: 4 1 8)\n1 * 8 = 8 (left: 4 8)  \n', '8 / 8 = 1 (left: 4 1 8)\n8 * 4 = 32 (left: 32 1)  \n', '8 / 8 = 1 (left: 4 1 8)\n8 - 1 = 7 (left: 4 7)\n', '8 * 8 = 64 (left: 4 8 64)  \n8 + 64 = 72 (left: 4 72)  \n', '8 * 8 = 64 (left: 4 8 64)  \n8 * 4 = 32 (left: 32 64)  \n', '4 + 8 = 12 (left: 8 8 12)  \n8 + 8 = 16 (left: 16 12)  \n', '4 + 8 = 12 (left: 8 8 12)  \n8 * 8 = 64 (left: 64 12)  \n', '4 + 8 = 12 (left: 8 8 12)  \n12 + 8 = 20 (left: 8 20)  \n', '4 + 8 = 12 (left: 8 8 12)  \n12 / 8 = 1.5 (left: 8 1.5)  \n', '8 / 4 = 2 (left: 2 8 8)  \n8 + 8 = 16 (left: 2 16)  \n', '8 / 4 = 2 (left: 2 8 8)  \n8 - 2 = 6 (left: 6 8)  \n', '8 - 4 = 4 (left: 4 8 8)  \n8 / 4 = 2 (left: 2 8)  \n', '8 / 8 = 1 (left: 4 1 8)\n4 + 1 = 5 (left: 5 8)  \n', '8 * 8 = 64 (left: 4 8 64)  \n4 + 8 = 12 (left: 12 64)  \n', '8 * 8 = 64 (left: 4 8 64)  \n8 - 4 = 4 (left: 4 64 4)  \n')
-- sol values --: (60, 60, 60, 60, 20, 20, 1.002, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.001, 0)
-- choices --: ['8 * 8 = 64 (left: 4 8 64)  \n64 / 4 = 16 (left: 8 16)\n', '8 / 4 = 2 (left: 2 8 8)  \n2 * 8 = 16 (left: 8 16)  \n', '8 - 4 = 4 (left: 4 8 8)  \n4 * 8 = 32 (left: 32 8)  \n', '8 / 8 = 1 (left: 4 1 8)\n4 - 1 = 3 (left: 3 8)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 8 = 8 (left: 4 8 8)  \n']

-- new_ys --: ('8 * 8 = 64 (left: 4 8 64)  \n64 / 8 = 8 (left: 4 8 8)  \n4 * 8 = 32 (left: 8 32)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 4 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 4 = 16 (left: 8 16)\n16 + 8 = 24 (left: 24)  \n', '8 / 4 = 2 (left: 2 8 8)  \n2 * 8 = 16 (left: 8 16)  \n8 + 16 = 24 (left: 24)  \n', '8 / 4 = 2 (left: 2 8 8)  \n2 * 8 = 16 (left: 8 16)  \n16 + 8 = 24 (left: 24)  \n', '8 - 4 = 4 (left: 4 8 8)  \n4 * 8 = 32 (left: 32 8)  \n32 - 8 = 24 (left: 24)  \n', '8 / 8 = 1 (left: 4 1 8)\n4 - 1 = 3 (left: 3 8)  \n3 * 8 = 24 (left: 24)  \n', '8 / 8 = 1 (left: 4 1 8)\n4 - 1 = 3 (left: 3 8)  \n8 * 3 = 24 (left: 24)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 8 = 8 (left: 4 8 8)  \n4 + 8 = 12 (left: 8 12)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 4 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 4 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 4 = 16 (left: 8 16)\n16 * 8 = 128 (left: 128)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 4 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2)  \n', '8 / 4 = 2 (left: 2 8 8)  \n2 * 8 = 16 (left: 8 16)  \n16 - 8 = 8 (left: 8)  \n', '8 / 4 = 2 (left: 2 8 8)  \n2 * 8 = 16 (left: 8 16)  \n8 * 16 = 128 (left: 128)  \n', '8 / 4 = 2 (left: 2 8 8)  \n2 * 8 = 16 (left: 8 16)  \n16 / 8 = 2 (left: 2)  \n', '8 / 4 = 2 (left: 2 8 8)  \n2 * 8 = 16 (left: 8 16)  \n8 - 8 = 0 (left: 16 0)\n', '8 - 4 = 4 (left: 4 8 8)  \n4 * 8 = 32 (left: 32 8)  \n32 + 8 = 40 (left: 40)  \n', '8 - 4 = 4 (left: 4 8 8)  \n4 * 8 = 32 (left: 32 8)  \n32 / 8 = 4 (left: 4)  \n', '8 - 4 = 4 (left: 4 8 8)  \n4 * 8 = 32 (left: 32 8)  \n8 + 32 = 40 (left: 40)  \n', '8 / 8 = 1 (left: 4 1 8)\n4 - 1 = 3 (left: 3 8)  \n3 + 8 = 11 (left: 11)  \n', '8 / 8 = 1 (left: 4 1 8)\n4 - 1 = 3 (left: 3 8)  \n8 + 3 = 11 (left: 11)  \n', '8 / 8 = 1 (left: 4 1 8)\n4 - 1 = 3 (left: 3 8)  \n8 - 3 = 5 (left: 5)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 8 = 8 (left: 4 8 8)  \n8 + 8 = 16 (left: 4 16)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 8 = 8 (left: 4 8 8)  \n8 - 4 = 4 (left: 8 4)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 8 = 8 (left: 4 8 8)  \n8 - 8 = 0 (left: 4 0)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 8 = 8 (left: 4 8 8)  \n8 * 8 = 64 (left: 4 64)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 8 = 8 (left: 4 8 8)  \n8 / 8 = 1 (left: 4 1)\n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 4 = 16 (left: 8 16)\n8 - 16 = -8 (left: -8)  \n', '8 / 4 = 2 (left: 2 8 8)  \n2 * 8 = 16 (left: 8 16)  \n8 - 16 = -8 (left: -8)  \n', '8 - 4 = 4 (left: 4 8 8)  \n4 * 8 = 32 (left: 32 8)  \n32 * 8 = 256 (left: 256)  \n', '8 - 4 = 4 (left: 4 8 8)  \n4 * 8 = 32 (left: 32 8)  \n8 * 32 = 256 (left: 256)\n', '8 / 8 = 1 (left: 4 1 8)\n4 - 1 = 3 (left: 3 8)  \n3 - 8 = -5 (left: -5)  \n', '8 / 8 = 1 (left: 4 1 8)\n4 - 1 = 3 (left: 3 8)  \n3 / 8 = 0.375 (left: 0.375)\n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 8 = 8 (left: 4 8 8)  \n8 / 4 = 2 (left: 8 2)  \n', '8 - 4 = 4 (left: 4 8 8)  \n4 * 8 = 32 (left: 32 8)  \n8 / 32 = 0.25 (left: 0.25)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 4 = 16 (left: 8 16)\n8 / 16 = 0.5 (left: 0.5)\n', '8 / 4 = 2 (left: 2 8 8)  \n2 * 8 = 16 (left: 8 16)  \n8 / 16 = 0.5 (left: 0.5)  \n', '8 - 4 = 4 (left: 4 8 8)  \n4 * 8 = 32 (left: 32 8)  \n8 - 32 = -24 (left: -24)  \n', '8 / 8 = 1 (left: 4 1 8)\n4 - 1 = 3 (left: 3 8)  \n8 / 3 = 2.67 (left: 2.67)  \n')
-- sol values --: (60, 20, 20, 20, 20, 20, 20, 20, 1.0019999999999998, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.001, 0, 0, 0, 0)
-- choices --: ['8 * 8 = 64 (left: 4 8 64)  \n64 / 8 = 8 (left: 4 8 8)  \n4 * 8 = 32 (left: 8 32)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 4 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)  \n', '8 * 8 = 64 (left: 4 8 64)  \n64 / 4 = 16 (left: 8 16)\n16 + 8 = 24 (left: 24)  \n', '8 / 4 = 2 (left: 2 8 8)  \n2 * 8 = 16 (left: 8 16)  \n8 + 16 = 24 (left: 24)  \n', '8 / 4 = 2 (left: 2 8 8)  \n2 * 8 = 16 (left: 8 16)  \n16 + 8 = 24 (left: 24)  \n']

Found the answer! 

Find final answer!

